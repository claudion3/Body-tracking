{"version":3,"sources":["redux/constants/bodyTruckConstants.js","components/Measurements.js","components/Navbar.js","components/InputField.js","App.js","redux/actions/BodyTruckActions.js","reportWebVitals.js","redux/store.js","redux/reducers/bodyTruckReducer.js","index.js"],"names":["GET_BODY_TRUCK_REQUEST","GET_BODY_TRUCK_SUCCESS","GET_BODY_TRUCK_FAIL","POST_BODY_TRUCK_REQUEST","POST_BODY_TRUCK_SUCCESS","POST_BODY_TRUCK_FAIL","UPDATE_BODY_TRUCK_REQUEST","UPDATE_BODY_TRUCK_SUCCESS","UPDATE_BODY_TRUCK_FAIL","DELETE_BODY_TRUCK_REQUEST","DELETE_BODY_TRUCK_SUCCESS","DELETE_BODY_TRUCK_FAIL","Measurements","data","removeTruck","editTruck","date","Date","toLocaleDateString","contentStyle","background","color","contentArrowStyle","borderRight","iconStyle","className","weight","hipWidth","onClick","class","_id","Navbar","InputField","forwardRef","props","ref","React","useState","value","setValue","error","setError","useImperativeHandle","validate","validation","rules","split","i","length","current","pair","label","placeholder","name","onChange","event","target","handleChange","type","autoComplete","defaultProps","App","dispatch","useDispatch","getAllTruckList","useSelector","state","getAllTruck","bodyTruck","loading","truckData","setTruckData","useEffect","a","actionTypes","axios","get","payload","response","message","refreshPage","setTimeout","window","location","reload","removeHandler","id","delete","deleteTruck","editHandler","editData","inputRefs","useRef","createRef","prev","onSubmit","e","preventDefault","isValid","put","post","inputDate","createTruck","formValue","map","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","createBdTruck","editBdTruck","x","deleteBdTruck","filter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1efeef2a.chunk.js","sourcesContent":["export const GET_BODY_TRUCK_REQUEST = 'GET_BODY_TRUCK_REQUEST';\r\nexport const GET_BODY_TRUCK_SUCCESS = 'GET_BODY_TRUCK_SUCCESS';\r\nexport const GET_BODY_TRUCK_FAIL = 'GET_BODY_TRUCK_FAIL';\r\n\r\nexport const POST_BODY_TRUCK_REQUEST = 'POST_BODY_TRUCK_REQUEST';\r\nexport const POST_BODY_TRUCK_SUCCESS = 'POST_BODY_TRUCK_SUCCESS';\r\nexport const POST_BODY_TRUCK_FAIL = 'POST_BODY_TRUCK_FAIL';\r\n\r\nexport const UPDATE_BODY_TRUCK_REQUEST = 'GET_PRODUCTS_REQUEST';\r\nexport const UPDATE_BODY_TRUCK_SUCCESS = 'GET_PRODUCTS_SUCCESS';\r\nexport const UPDATE_BODY_TRUCK_FAIL = 'GET_PRODUCTS_FAIL';\r\n\r\nexport const DELETE_BODY_TRUCK_REQUEST = 'DELETE_BODY_TRUCK_REQUEST';\r\nexport const DELETE_BODY_TRUCK_SUCCESS = 'DELETE_BODY_TRUCK_SUCCESS';\r\nexport const DELETE_BODY_TRUCK_FAIL = 'DELETE_BODY_TRUCK_FAIL';\r\n","import React from 'react';\r\nimport './Measurements.css';\r\nimport {\r\n\tVerticalTimeline,\r\n\tVerticalTimelineElement,\r\n} from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nconst Measurements = ({ data, removeTruck, editTruck }) => {\r\n\tconst date = new Date(data.date).toLocaleDateString();\r\n\r\n\treturn (\r\n\t\t<VerticalTimeline>\r\n\t\t\t<VerticalTimelineElement\r\n\t\t\t\tcontentStyle={{ background: ' #E9E6EA', color: '#000' }}\r\n\t\t\t\tcontentArrowStyle={{ borderRight: '7px solid  rgb(233,230,234)' }}\r\n\t\t\t\tdate={date}\r\n\t\t\t\ticonStyle={{ background: 'rgb(16, 204, 82)', color: '#fff' }}>\r\n\t\t\t\t<h3 className='vertical-timeline-element-title'>Body Truck Data</h3>\r\n\r\n\t\t\t\t<p className='vertical-timeline-element-subtitle'>\r\n\t\t\t\t\tWeight {data.weight} Kg\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='vertical-timeline-element-subtitle'>\r\n\t\t\t\t\tHip Width {data.hipWidth} cm\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className='edit-delete'>\r\n\t\t\t\t\t<button className='edit' onClick={() => editTruck(data)}>\r\n\t\t\t\t\t\t<i class='fas fa-edit'></i>\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button className='delete' onClick={() => removeTruck(data._id)}>\r\n\t\t\t\t\t\t<i className='fas fa-trash'></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</VerticalTimelineElement>\r\n\t\t</VerticalTimeline>\r\n\t);\r\n};\r\n\r\nexport default Measurements;\r\n","import React from 'react';\r\n\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<nav className='navbar'>\r\n\t\t\t<div className='navbar_logo'>\r\n\t\t\t\t<h2>Truck App</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='hamburger_menu'>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { forwardRef, useImperativeHandle } from 'react';\r\n\r\nconst InputField = forwardRef((props, ref) => {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [error, setError] = React.useState('');\r\n\r\n\tconst handleChange = event => {\r\n\t\tsetValue(event.target.value);\r\n\t\tsetError('');\r\n\t\tprops.onChange(event.target.name, event.target.value);\r\n\t};\r\n\r\n\tconst validate = () => {\r\n\t\tif (props.validation) {\r\n\t\t\tconst rules = props.validation.split('|');\r\n\r\n\t\t\tfor (let i = 0; i < rules.length; i++) {\r\n\t\t\t\tconst current = rules[i];\r\n\r\n\t\t\t\tif (current === 'required') {\r\n\t\t\t\t\tif (!value) {\r\n\t\t\t\t\t\tsetError('This field is required');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pair = current.split(':');\r\n\t\t\t\tswitch (pair[0]) {\r\n\t\t\t\t\tcase 'min':\r\n\t\t\t\t\t\tif (value.length < pair[1]) {\r\n\t\t\t\t\t\t\tsetError(`This field must be at least ${pair[1]} character long`);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'max':\r\n\t\t\t\t\t\tif (value.length > pair[1]) {\r\n\t\t\t\t\t\t\tsetError(\r\n\t\t\t\t\t\t\t\t`This field must be no longer than ${pair[1]} character long`,\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\treturn {\r\n\t\t\tvalidate: () => validate(),\r\n\t\t};\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='input-wrapper'>\r\n\t\t\t{props.label && <label>{props.label}</label>}\r\n\t\t\t<input\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tname={props.name}\r\n\t\t\t\tonChange={event => handleChange(event)}\r\n\t\t\t\ttype={props.type}\r\n\t\t\t\tvalue={props.value ? props.value : value}\r\n\t\t\t\tautoComplete={props.autoComplete}\r\n\t\t\t/>\r\n\t\t\t{error && <p className='error'>{error}</p>}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nInputField.defaultProps = {\r\n\tplaceholder: '',\r\n\tname: '',\r\n\ttype: 'number',\r\n\tvalue: '',\r\n\tautoComplete: 'off',\r\n\tvalidation: '',\r\n};\r\n\r\nexport default InputField;\r\n","import React, { useEffect, useRef, createRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n\tgetAllTruck as truckList,\n\tcreateTruck,\n\teditTruck,\n\tdeleteTruck,\n} from './redux/actions/BodyTruckActions';\nimport Measurements from './components/Measurements';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport InputField from './components/InputField';\n\nconst App = () => {\n\tconst dispatch = useDispatch();\n\n\tconst getAllTruckList = useSelector(state => state.getAllTruck);\n\tconst { bodyTruck, loading, error } = getAllTruckList;\n\n\tconst [truckData, setTruckData] = useState({});\n\tuseEffect(() => {\n\t\tdispatch(truckList());\n\t}, [dispatch]);\n\n\tconst refreshPage = () => {\n\t\tsetTimeout(() => {\n\t\t\twindow.location.reload();\n\t\t}, 100);\n\t};\n\tconst removeHandler = id => {\n\t\tdispatch(deleteTruck(id));\n\n\t\trefreshPage();\n\t};\n\n\tconst editHandler = editData => {\n\t\tsetTruckData(editData);\n\t};\n\n\tconst inputRefs = useRef([createRef(), createRef(), createRef()]);\n\n\tconst handleChange = (name, value) => {\n\t\tsetTruckData(prev => ({ ...prev, [name]: value }));\n\t};\n\n\tconst submitForm = e => {\n\t\te.preventDefault();\n\n\t\tlet isValid = true;\n\n\t\tfor (let i = 0; i < inputRefs.current.length; i++) {\n\t\t\tconst valid = inputRefs.current[i].current.validate();\n\n\t\t\tif (!valid) {\n\t\t\t\tisValid = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (truckData._id) {\n\t\t\tdispatch(editTruck(truckData));\n\t\t} else {\n\t\t\tdispatch(createTruck(truckData));\n\t\t}\n\n\t\t//Reset the form\n\t\tlet formValue = e.target;\n\t\tfor (let i = 0; i < formValue.length; i++) {\n\t\t\tformValue[i].value = '';\n\t\t}\n\t\trefreshPage();\n\t};\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Navbar />\n\t\t\t<form onSubmit={submitForm} className='form'>\n\t\t\t\t<h1>Enter New Truck</h1>\n\t\t\t\t<InputField\n\t\t\t\t\tref={inputRefs.current[0]}\n\t\t\t\t\tname='date'\n\t\t\t\t\tlabel='Date*:'\n\t\t\t\t\ttype='date'\n\t\t\t\t\tvalue={truckData.date}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalidation={'required|min:8'}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tref={inputRefs.current[1]}\n\t\t\t\t\tname='weight'\n\t\t\t\t\tplaceholder='Enter your weight...'\n\t\t\t\t\tlabel='Weight*:'\n\t\t\t\t\tvalue={truckData.weight}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tvalidation={'required|min:2|max:3'}\n\t\t\t\t/>\n\t\t\t\t<InputField\n\t\t\t\t\tref={inputRefs.current[2]}\n\t\t\t\t\tname='hipWidth'\n\t\t\t\t\tplaceholder='Enter your Hip Width...'\n\t\t\t\t\tlabel='Hip Width*:'\n\t\t\t\t\tvalue={truckData.hipWidth}\n\t\t\t\t\tvalidation='required|min:2|max:3'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<button type='submit'>Submit</button>\n\t\t\t</form>\n\t\t\t{loading ? (\n\t\t\t\t<h2>Loading...</h2>\n\t\t\t) : error ? (\n\t\t\t\t<h2>{error}</h2>\n\t\t\t) : (\n\t\t\t\t<div className='timeline-container'>\n\t\t\t\t\t{bodyTruck.length > 0 &&\n\t\t\t\t\t\tbodyTruck.map((data, idx) => (\n\t\t\t\t\t\t\t<Measurements\n\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tremoveTruck={removeHandler}\n\t\t\t\t\t\t\t\teditTruck={editHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import * as actionTypes from '../constants/bodyTruckConstants';\r\nimport axios from 'axios';\r\n\r\n//Get All truck\r\nexport const getAllTruck = () => async dispatch => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.GET_BODY_TRUCK_REQUEST });\r\n\r\n\t\tconst { data } = await axios.get('/bodytruck/');\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.GET_BODY_TRUCK_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.GET_BODY_TRUCK_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Create a truck\r\nexport const createTruck = data => async dispatch => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.POST_BODY_TRUCK_REQUEST });\r\n\r\n\t\tconst { inputDate } = await axios.post(`/bodytruck/`, data);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_BODY_TRUCK_SUCCESS,\r\n\t\t\tpayload: inputDate,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.POST_BODY_TRUCK_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n//Edit a truck\r\nexport const editTruck = data => async dispatch => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.UPDATE_BODY_TRUCK_REQUEST });\r\n\r\n\t\tconst { editData } = await axios.put(`/bodytruck/${data._id}`, data);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.UPDATE_BODY_TRUCK_SUCCESS,\r\n\t\t\tpayload: editData,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.UPDATE_BODY_TRUCK_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Delete a truck\r\nexport const deleteTruck = id => async dispatch => {\r\n\ttry {\r\n\t\tdispatch({ type: actionTypes.DELETE_BODY_TRUCK_REQUEST });\r\n\r\n\t\tconst { data } = await axios.delete(`/bodytruck/${id}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.DELETE_BODY_TRUCK_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: actionTypes.DELETE_BODY_TRUCK_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n\tgetBodyTruck,\r\n\tcreateTruck,\r\n\tdeleteTruck,\r\n\tupdateTruck,\r\n} from './reducers/bodyTruckReducer';\r\nconst reducer = combineReducers({\r\n\tgetAllTruck: getBodyTruck,\r\n\tcreateBdTruck: createTruck,\r\n\teditBdTruck: updateTruck,\r\n\tdeleteBdTruck: deleteTruck,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n\treducer,\r\n\tcomposeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from '../constants/bodyTruckConstants';\r\n//Get All body truck\r\nexport const getBodyTruck = (state = { bodyTruck: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.GET_BODY_TRUCK_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase actionTypes.GET_BODY_TRUCK_SUCCESS:\r\n\t\t\treturn { ...state, bodyTruck: [...action.payload], loading: false };\r\n\t\tcase actionTypes.GET_BODY_TRUCK_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n//Create body truck\r\nexport const createTruck = (state = { bodyTruck: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.POST_BODY_TRUCK_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase actionTypes.POST_BODY_TRUCK_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbodyTruck: [...state.bodyTruck, action.payload],\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase actionTypes.POST_BODY_TRUCK_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n//Edit body truck\r\nexport const updateTruck = (state = { bodyTruck: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.UPDATE_BODY_TRUCK_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase actionTypes.UPDATE_BODY_TRUCK_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbodyTruck: state.bodyTruck.map(x =>\r\n\t\t\t\t\tx._id === action.payload._id ? action.payload : x,\r\n\t\t\t\t),\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase actionTypes.UPDATE_BODY_TRUCK_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n//Delete body truck\r\nexport const deleteTruck = (state = { bodyTruck: [] }, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.DELETE_BODY_TRUCK_REQUEST:\r\n\t\t\treturn { loading: true };\r\n\t\tcase actionTypes.DELETE_BODY_TRUCK_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbodyTruck: state.bodyTruck.filter(e => e._id !== action.payload),\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\tcase actionTypes.DELETE_BODY_TRUCK_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\terror: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}